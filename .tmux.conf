unbind -n Tab

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

set -g default-terminal "tmux-256color"

set -g prefix C-s

unbind-key C-b

unbind-key \;

bind-key C-s send-prefix
bind-key v split-window -h
bind-key f split-window -v
bind-key \; command-prompt

bind-key J command-prompt -p "Join pane from window:" "join-pane -s '%%'"
bind-key S command-prompt -p "Send pane to window:" "join-pane -t '%%'"

unbind-key '"'
unbind-key '%'

set-window-option -g mode-keys vi

# bind-key -t vi-copy 'j' down
# bind-key -t vi-copy 'k' up


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# The statusbar

set -g status-position bottom
set -g status-bg colour5
set -g status-fg colour15
set -g status-attr none
set -g status-left '#[bg=colour4]» #S » #[default]#[fg=colour4]#[default]'
set -g status-right-length 50
set -g status-left-length 20
setw -g window-status-current-bg colour13
setw -g window-status-current-fg colour15
setw -g window-status-current-attr none
setw -g window-status-current-format ' #{=20:pane_title} '

setw -g window-status-bg colour5
setw -g window-status-fg colour15
setw -g window-status-format ' #{=20:pane_title} '

setw -g window-status-bell-attr bold
setw -g window-status-bell-fg colour15
setw -g window-status-bell-bg colour1

setw -g message-bg colour5
setw -g message-fg colour15
